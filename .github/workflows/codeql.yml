name: "CodeQL Advanced Build with PlatformIO"

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  schedule:
    - cron: '26 15 * * 4'

jobs:
  analyze:
    name: Analyze (${{ matrix.language }})
    runs-on: ubuntu-latest
    permissions:
      security-events: write
      packages: read
      actions: read
      contents: read

    strategy:
      fail-fast: false
      matrix:
        include:
          - language: c-cpp
            build-mode: manual  # Changed from 'autobuild' to 'manual'

    steps:
        
      - name: Checkout repository
        uses: actions/checkout@v4

      # Install PlatformIO if not already available
      - name: Install PlatformIO
        run: pip install platformio
        
      # Cache PlatformIO dependencies  
      - name: Cache
        uses: actions/cache@v4.2.3
        with:
          path: |
            ~/.platformio/packages
            ~/.platformio/platforms
            ~/.platformio/projects
          key: ${{ runner.os }}-platformio-${{ hashFiles('**/platformio.ini') }}
          restore-keys: |
            ${{ runner.os }}-platformio-
            
      - name: Initialize CodeQL
        uses: github/codeql-action/init@v3
        with:
          languages: ${{ matrix.language }}
          build-mode: ${{ matrix.build-mode }}

      # Build the project using PlatformIO
      - name: Build with PlatformIO
        run: |
          pio run
            
      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v3
        with:
          category: "/language:${{ matrix.language }}"

  coveralls:
    name: Coveralls
    runs-on: ubuntu-latest
    needs: analyze  # This ensures the Coveralls job runs after the analyze job
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        
      # Install PlatformIO if not already available
      - name: Install PlatformIO
        run: pip install platformio
      # Install Coveralls
      - name: Install Coveralls
        run: pip install coveralls
        
      - name: Run tests with coverage
        run: |
          pio run
          # Generate an lcov report for Coveralls (assumes coverage data is available)
          gcovr -r . --lcov -o lcov.info
          
      - name: Run Coveralls
        uses: coverallsapp/github-action@v2
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          path-to-lcov: coverage_filtered.info
